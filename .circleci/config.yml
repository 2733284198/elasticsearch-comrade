version: 2
jobs:
  "build-client":
      machine: true
      steps:
        - checkout
        - restore_cache:
           keys:
             - client-{{ checksum "client/Dockerfile" }}-{{ .Branch }}
             - client-{{ checksum "client/Dockerfile" }}
        - run:
           name: Load Docker image layer cache
           command: |
             set +o pipefail
             if [ -f caches/${CIRCLE_PROJECT_REPONAME}-client.tar.gz ]; then gunzip -c caches/${CIRCLE_PROJECT_REPONAME}-client.tar.gz | docker load; docker images; fi
        - run:
           name: Build application Docker image
           command: |
             docker build --tag ${CIRCLE_PROJECT_REPONAME}-client -f client/Dockerfile .
        - run:
           name: Save Docker image layer cache
           command: |
             mkdir -p caches/
             docker build --tag ${CIRCLE_PROJECT_REPONAME}-client -f client/Dockerfile . | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > /tmp/layers-client.txt
             docker save $(cat /tmp/layers-client.txt) | gzip > caches/${CIRCLE_PROJECT_REPONAME}-client.tar.gz
        - save_cache:
           key: client-{{ checksum "client/Dockerfile" }}-{{ .Branch }}
           paths:
             - caches/
  "build-server":
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - server-{{ checksum "server/Dockerfile" }}-{{ .Branch }}
           - server-{{ checksum "server/Dockerfile" }}
      - run:
         name: Load Docker image layer cache
         command: |
           set +o pipefail
           if [ -f caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz ]; then gunzip -c caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz | docker load; docker images; fi
      - run:
         name: Build application Docker image
         command: |
           docker build --tag ${CIRCLE_PROJECT_REPONAME}-server -f server/Dockerfile .
      - run:
         name: Save Docker image layer cache
         command: |
           mkdir -p caches/
           docker build --tag ${CIRCLE_PROJECT_REPONAME}-server -f server/Dockerfile . | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > /tmp/layers-server.txt
           docker save $(cat /tmp/layers-server.txt) | gzip > caches/${CIRCLE_PROJECT_REPONAME}-server.tar.gz
      - save_cache:
         key: server-{{ checksum "server/Dockerfile" }}-{{ .Branch }}
         paths:
           - caches/
  lint:
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
           - client-{{ checksum "client/Dockerfile" }}-{{ .Branch }}
           - client-{{ checksum "client/Dockerfile" }}
      - run:
         name: Load Docker image layer cache
         command: |
           set +o pipefail
           if [ -f caches/${CIRCLE_PROJECT_REPONAME}-client.tar.gz ]; then gunzip -c caches/${CIRCLE_PROJECT_REPONAME}-client.tar.gz | docker load; docker images; fi
      - run:
         name: 'lint'
         command: |
           docker run -it $(docker images --format '{{.ID}}') npm run lint --no-fix
workflows:
  version: 2
  build_and_test:
    jobs:
      - "build-client"
      - "build-server"
      - lint:
          requires:
            - "build-client"
